<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://www.springframework.org/schema/security 
						   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- This is where we configure Spring-Security  -->
	<http auto-config="true" use-expressions="true" >
		<access-denied-handler error-page="/403"/>

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		
		<!--<form-login
			login-processing-url="/j_spring_security_check"
			login-page="/login"
			default-target-url="/customers/list"
			authentication-failure-url="/login?error=true"
			username-parameter="username"
			password-parameter="password" />
		
		<logout 
			logout-url="/j_spring_security_logout" />
		-->
		<!-- enable csrf protection -->
		<csrf />
	</http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="spring@123" authorities="ROLE_ADMIN" />
                <user name="maimai" password="maimai123" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database
	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
	<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>-->

</beans:beans>
