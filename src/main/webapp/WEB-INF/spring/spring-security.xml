<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://www.springframework.org/schema/security 
						   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- This is where we configure Spring-Security  -->
	<http authentication-manager-ref="dao-auth">
        <!--
        <intercept-url pattern="/login*" access="permitAll"/>
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
		<form-login
			login-processing-url="/j_spring_security_check"
			login-page="/login"
			default-target-url="/customers/list"
			authentication-failure-url="/login?error=true"
			username-parameter="username"
			password-parameter="password" />
		<access-denied-handler error-page="/error403"/>
		-->
        <intercept-url pattern="/**" access="hasAnyRole('ADMIN', 'USER')"/>
		<form-login />
		<logout />
        
		<!-- enable csrf protection -->
		<csrf />
	</http>

    <authentication-manager id="in-memory-auth">
        <authentication-provider>
            <user-service>
                <user name="admin" password="spring@123" authorities="ROLE_ADMIN" />
                <user name="maimai" password="maimai123" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
    
    <authentication-manager id="dao-auth">
        <authentication-provider user-service-ref="myUserDetailsService"/>
    </authentication-manager>
    <beans:bean id="myUserDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
	    <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    
    <authentication-manager id="jdbc-auth">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from users where username = ?"
				authorities-by-username-query="select username,authority from authorities where username = ?" />
		</authentication-provider>
	</authentication-manager>

	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database
	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
	<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>-->

</beans:beans>
